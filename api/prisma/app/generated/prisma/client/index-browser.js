
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ImageScalarFieldEnum = {
  id: 'id',
  uploadedById: 'uploadedById',
  aspect: 'aspect',
  path: 'path',
  filename: 'filename',
  extension: 'extension'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  hash: 'hash',
  isVerified: 'isVerified',
  role: 'role',
  refreshToken: 'refreshToken'
};

exports.Prisma.UserPermissionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  accessLevel: 'accessLevel',
  scope: 'scope'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  email: 'email',
  username: 'username',
  profileImageId: 'profileImageId'
};

exports.Prisma.ExpiredRefreshTokenScalarFieldEnum = {
  id: 'id',
  savedAt: 'savedAt',
  token: 'token'
};

exports.Prisma.CountryScalarFieldEnum = {
  id: 'id',
  code: 'code',
  name: 'name'
};

exports.Prisma.ProvinceScalarFieldEnum = {
  id: 'id',
  code: 'code',
  name: 'name',
  countryId: 'countryId'
};

exports.Prisma.CityScalarFieldEnum = {
  id: 'id',
  code: 'code',
  name: 'name',
  provinceId: 'provinceId'
};

exports.Prisma.BusinessScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  profileImageId: 'profileImageId',
  websiteUrl: 'websiteUrl',
  cityId: 'cityId'
};

exports.Prisma.BusinessDetailsScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.FavoritedBusinessScalarFieldEnum = {
  businessId: 'businessId',
  accountId: 'accountId'
};

exports.Prisma.RatingScalarFieldEnum = {
  id: 'id',
  businessId: 'businessId',
  accountId: 'accountId',
  parentRatingId: 'parentRatingId',
  createdAt: 'createdAt',
  atmosphereRating: 'atmosphereRating',
  serviceRating: 'serviceRating',
  speedRating: 'speedRating',
  catalogRating: 'catalogRating',
  priceRating: 'priceRating',
  atmosphereNote: 'atmosphereNote',
  serviceNote: 'serviceNote',
  speedNote: 'speedNote',
  catalogNote: 'catalogNote',
  priceNote: 'priceNote',
  overallNote: 'overallNote'
};

exports.Prisma.AddressScalarFieldEnum = {
  id: 'id',
  cityId: 'cityId',
  contact: 'contact',
  organization: 'organization',
  lineOne: 'lineOne',
  lineTwo: 'lineTwo',
  lineThree: 'lineThree',
  suite: 'suite',
  postal: 'postal',
  lat: 'lat',
  lng: 'lng'
};

exports.Prisma.BusinessAddressScalarFieldEnum = {
  businessId: 'businessId',
  addressId: 'addressId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.ImageOrderByRelevanceFieldEnum = {
  uploadedById: 'uploadedById',
  path: 'path',
  filename: 'filename'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  id: 'id',
  email: 'email',
  hash: 'hash',
  refreshToken: 'refreshToken'
};

exports.Prisma.UserPermissionOrderByRelevanceFieldEnum = {
  userId: 'userId',
  scope: 'scope'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.AccountOrderByRelevanceFieldEnum = {
  id: 'id',
  email: 'email',
  username: 'username'
};

exports.Prisma.ExpiredRefreshTokenOrderByRelevanceFieldEnum = {
  token: 'token'
};

exports.Prisma.CountryOrderByRelevanceFieldEnum = {
  code: 'code',
  name: 'name'
};

exports.Prisma.ProvinceOrderByRelevanceFieldEnum = {
  code: 'code',
  name: 'name'
};

exports.Prisma.CityOrderByRelevanceFieldEnum = {
  code: 'code',
  name: 'name'
};

exports.Prisma.BusinessOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description',
  websiteUrl: 'websiteUrl'
};

exports.Prisma.FavoritedBusinessOrderByRelevanceFieldEnum = {
  accountId: 'accountId'
};

exports.Prisma.RatingOrderByRelevanceFieldEnum = {
  accountId: 'accountId',
  atmosphereNote: 'atmosphereNote',
  serviceNote: 'serviceNote',
  speedNote: 'speedNote',
  catalogNote: 'catalogNote',
  priceNote: 'priceNote',
  overallNote: 'overallNote'
};

exports.Prisma.AddressOrderByRelevanceFieldEnum = {
  contact: 'contact',
  organization: 'organization',
  lineOne: 'lineOne',
  lineTwo: 'lineTwo',
  lineThree: 'lineThree',
  suite: 'suite',
  postal: 'postal'
};
exports.ImageFileExtension = exports.$Enums.ImageFileExtension = {
  JPG: 'JPG',
  PNG: 'PNG',
  SVG: 'SVG'
};

exports.Role = exports.$Enums.Role = {
  USER: 'USER',
  ADMIN: 'ADMIN'
};

exports.Prisma.ModelName = {
  Image: 'Image',
  User: 'User',
  UserPermission: 'UserPermission',
  Account: 'Account',
  ExpiredRefreshToken: 'ExpiredRefreshToken',
  Country: 'Country',
  Province: 'Province',
  City: 'City',
  Business: 'Business',
  BusinessDetails: 'BusinessDetails',
  FavoritedBusiness: 'FavoritedBusiness',
  Rating: 'Rating',
  Address: 'Address',
  BusinessAddress: 'BusinessAddress'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
